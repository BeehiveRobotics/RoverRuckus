package org.firstinspires.ftc.teamcode.Test

import com.qualcomm.robotcore.eventloop.opmode.Autonomous
import com.qualcomm.robotcore.hardware.DcMotor
import org.BeehiveRobotics.Library.Util.BROpMode
import org.BeehiveRobotics.Library.Robots.MecanumRobot

//@Autonomous(name = "Test MecanumDrive", group = "Test")
class MecanumDriveTest: BROpMode(OpModeType.Autonomous) {
    private val robot = MecanumRobot(this)
    override fun initialize() {
        this.robot.init()
    }
    override fun run() {
        dashboard.addLine("Forward", true)
        robot.drive.forward(1.0, 12.0)
        dashboard.addLine("Backward", true)
        robot.drive.backward(1.0, 12.0)
        dashboard.addLine("Strafe Left", true)
        robot.drive.strafeLeft(1.0, 12.0)
        dashboard.addLine("Strafe Right", true)
        robot.drive.strafeRight(1.0, 12.0)
        dashboard.addLine("Spin Left", true)
        robot.drive.spinLeft(1.0, 12.0)
        dashboard.addLine("Spin Right", true)
        robot.drive.spinRight(1.0, 12.0)
        dashboard.addLine("Left Forward", true)
        robot.drive.leftForward(1.0, 12.0)
        dashboard.addLine("Left Backward", true)
        robot.drive.leftBackward(1.0, 12.0)
        dashboard.addLine("Right Forward", true)
        robot.drive.rightForward(1.0, 12.0)
        dashboard.addLine("Right Backward", true)
        robot.drive.rightBackward(1.0, 12.0)
        dashboard.addLine("Forward Left", true)
        robot.drive.forwardLeft(1.0, 12.0)
        dashboard.addLine("Forward Right", true)
        robot.drive.forwardRight(1.0, 12.0)
        dashboard.addLine("Backward Left", true)
        robot.drive.backwardLeft(1.0, 12.0)
        dashboard.addLine("Backward Right", true)
        robot.drive.backwardRight(1.0, 12.0)

        dashboard.addLine("Forward", true)
        robot.drive.forward(0.5, 12.0)
        dashboard.addLine("Backward", true)
        robot.drive.backward(0.5, 12.0)
        dashboard.addLine("Strafe Left", true)
        robot.drive.strafeLeft(0.5, 12.0)
        dashboard.addLine("Strafe Right", true)
        robot.drive.strafeRight(0.5, 12.0)
        dashboard.addLine("Spin Left", true)
        robot.drive.spinLeft(0.5, 12.0)
        dashboard.addLine("Spin Right", true)
        robot.drive.spinRight(0.5, 12.0)
        dashboard.addLine("Left Forward", true)
        robot.drive.leftForward(0.5, 12.0)
        dashboard.addLine("Left Backward", true)
        robot.drive.leftBackward(0.5, 12.0)
        dashboard.addLine("Right Forward", true)
        robot.drive.rightForward(0.5, 12.0)
        dashboard.addLine("Right Backward", true)
        robot.drive.rightBackward(0.5, 12.0)
        dashboard.addLine("Forward Left", true)
        robot.drive.forwardLeft(0.5, 12.0)
        dashboard.addLine("Forward Right", true)
        robot.drive.forwardRight(0.5, 12.0)
        dashboard.addLine("Backward Left", true)
        robot.drive.backwardLeft(0.5, 12.0)
        dashboard.addLine("Backward Right", true)
        robot.drive.backwardRight(0.5, 12.0)


        dashboard.addLine("Forward", true)
        robot.drive.forward(1.0, 6.0)
        dashboard.addLine("Backward", true)
        robot.drive.backward(1.0, 6.0)
        dashboard.addLine("Strafe Left", true)
        robot.drive.strafeLeft(1.0, 6.0)
        dashboard.addLine("Strafe Right", true)
        robot.drive.strafeRight(1.0, 6.0)
        dashboard.addLine("Spin Left", true)
        robot.drive.spinLeft(1.0, 6.0)
        dashboard.addLine("Spin Right", true)
        robot.drive.spinRight(1.0, 6.0)
        dashboard.addLine("Left Forward", true)
        robot.drive.leftForward(1.0, 6.0)
        dashboard.addLine("Left Backward", true)
        robot.drive.leftBackward(1.0, 6.0)
        dashboard.addLine("Right Forward", true)
        robot.drive.rightForward(1.0, 6.0)
        dashboard.addLine("Right Backward", true)
        robot.drive.rightBackward(1.0, 6.0)
        dashboard.addLine("Forward Left", true)
        robot.drive.forwardLeft(1.0, 6.0)
        dashboard.addLine("Forward Right", true)
        robot.drive.forwardRight(1.0, 6.0)
        dashboard.addLine("Backward Left", true)
        robot.drive.backwardLeft(1.0, 6.0)
        dashboard.addLine("Backward Right", true)
        robot.drive.backwardRight(1.0, 6.0)

    }
}
